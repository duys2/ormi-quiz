문제: 온라인 쇼핑몰 시스템 구현하기

요구사항:
- 상품(Product)이라는 부모 클래스를 생성하고, 자식 클래스로 의류(Clothing), 전자제품(Electronics), 식품(Food)을 생성할 것 (15점)
    - Product 클래스는 상품명(name), 가격(price), 재고량(stock)을 나타내는 필드를 가지며, 각 필드는 private 접근 제어자로 선언할 것
    - Product 클래스의 생성자는 상품명, 가격, 재고량을 매개변수로 받아 각 필드를 초기화할 것
    - Product 클래스는 각 필드에 대한 public 접근 제어자의 getter 메소드와 setter 메소드를 포함할 것
    - 각 자식 클래스(Clothing, Electronics, Food)는 Product 클래스를 상속받을 것
    - Clothing 클래스는 사이즈(size)를 나타내는 필드를 추가로 가지며, private 접근 제어자로 선언할 것
    - Electronics 클래스는 브랜드(brand)를 나타내는 필드를 추가로 가지며, private 접근 제어자로 선언할 것
    - Food 클래스는 유통기한(expirationDate)을 나타내는 필드를 추가로 가지며, private 접근 제어자로 선언할 것

- 각 자식 클래스의 생성자에서는 super()를 사용하여 부모 생성자를 호출하고 상품명, 가격, 재고량을 설정하고, 자식 클래스의 독자적인 필드도 설정할 수 있도록 할 것 (15점)
    - Clothing 클래스의 생성자는 상품명, 가격, 재고량, 사이즈를 매개변수로 받아 부모 생성자를 호출하고 사이즈 필드를 초기화할 것
    - Electronics 클래스의 생성자는 상품명, 가격, 재고량, 브랜드를 매개변수로 받아 부모 생성자를 호출하고 브랜드 필드를 초기화할 것
    - Food 클래스의 생성자는 상품명, 가격, 재고량, 유통기한을 매개변수로 받아 부모 생성자를 호출하고 유통기한 필드를 초기화할 것

 Product 클래스에 public 접근 제어자로 가격을 계산하는 calculatePrice() 메소드를 생성하고, 자식 클래스에서 이를 오버라이딩할 것 (15점)
    - Product 클래스의 calculatePrice() 메소드는 가격(price)을 그대로 리턴함
    - Clothing 클래스의 calculatePrice() 메소드는 사이즈가 "L" 이상이면 가격에 10%를 추가하여 리턴함
    - Electronics 클래스의 calculatePrice() 메소드는 브랜드가 "Apple"이면 가격에 20%를 추가하여 리턴함
    - Food 클래스의 calculatePrice() 메소드는 유통기한이 7일 이하로 남았다면 가격에서 20%를 할인하여 리턴함

- 쇼핑몰 클래스(ShoppingMall)를 생성하고 여러 상품을 담을 수 있는 Product 배열을 필드로 가질 것 (15점)
    - ShoppingMall 클래스는 Product 배열을 필드로 가지며, 배열의 크기를 생성자에서 매개변수로 받아 초기화할 것
    - 제품 추가(addProduct), 제품 삭제(removeProduct), 제품 목록 출력(displayProducts) 기능을 가진 메소드 생성할 것 **(단, removeProduct 만)**
        - addProduct 메소드는 Product 객체를 매개변수로 받아 배열에 추가하는 기능을 할 것
        - removeProduct 메소드는 Product **객체 그리고 상품명**을 매개변수로 받아 배열에서 해당 상품을 삭제하는 기능을 할 것
            - 상품명을 받으면 해당 상품명들을 전부 삭제해도 되고 한 개만 삭제하여도됨
        - displayProducts 메소드는 현재 배열에 있는 모든 상품의 정보를 출력하는 기능을 할 것
    - 제품 추가 시 배열이 꽉 찼다면 기존 배열 크기의 2배로 새로운 배열을 생성하고 기존 상품들을 복사한 후 새 상품을 추가할 것 → 메서드로 추출

- ShoppingMall 클래스에 public abstract 메소드로 주문 가능 여부를 확인하는 checkOrderAvailability()를 선언할 것 (15점)
    - checkOrderAvailability() 메소드는 매개변수를 받지 않고 주문 가능 여부를 boolean 값으로 리턴하는 추상 메소드로 선언할 것
    - ShoppingMall 클래스를 상속받은 PremiumShoppingMall 클래스를 생성하고 checkOrderAvailability() 메소드를 오버라이딩할 것
    - PremiumShoppingMall 클래스의 checkOrderAvailability() 메소드는 모든 상품의 재고량이 10개 이상일 때만 true를 리턴하고 그 외에는 false를 리턴할 것